@page "/logcount"
@using System.Text.RegularExpressions

<h2 class="text-xl font-bold mb-4">시간당 핸드오버 발생 수</h2>

<InputTextArea @bind-Value="logInput" class="w-full h-64 p-2 border rounded mb-4" placeholder="로그 데이터를 붙여넣으세요" />
<button class="mb-4 bg-blue-500 text-white px-4 py-2 rounded" @onclick="AnalyzeLogs">분석하기</button>

@if (hourlyCounts?.Count > 0)
{
    <table class="log-table">
        <thead>
            <tr>
                <th>시간</th>
                <th>핸드오버 로그 발생 수</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var entry in hourlyCounts)
            {
                <tr>
                    <td>@entry.Key</td>
                    <td>@entry.Value</td>
                </tr>
            }
           <tr>
               <td>평균</td>
                <td>@avgCount</td>
           </tr>
        </tbody>
    </table>
}
<style>
    .log-table {
        border-collapse: collapse;
        width: 100%;
        margin-top: 20px;
    }

        .log-table th,
        .log-table td {
            border: 1px solid #ccc;
            padding: 8px;
            text-align: center;
        }

        .log-table th {
            background-color: #f2f2f2;
        }
</style>
@code {
    private int avgCount = 0;
    private string logInput = "";//로그 입력 값 변수
    private Dictionary<int, int> hourlyCounts = new();// 딕셔너리 초기화

    private void AnalyzeLogs()
    {
        hourlyCounts.Clear();
        var regex = new Regex(@"\[\d{2}/\d{2}/\d{2} (\d{2}):\d{2}:\d{2}");

        for (int h = 9; h <= 18; h++)
            hourlyCounts[h] = 0;

        foreach (Match match in regex.Matches(logInput))
        {
            if (int.TryParse(match.Groups[1].Value, out int hour))
            {
                if (hour >= 9 && hour <= 18)
                    hourlyCounts[hour]++;
            }
        }

        int totalCount = hourlyCounts.Values.Sum();
        int countWithLogs = hourlyCounts.Values.Count(v => v > 0); // 0이 아닌 시간대만
        avgCount = countWithLogs > 0 ? totalCount / (int)countWithLogs : 0;
    }
}
